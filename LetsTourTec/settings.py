"""
Django settings for LetsTourTec project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import sys
import dj_database_url
import boto3
from datetime import timedelta
import logging

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u0cr33!p^qzjrpg#y$imtz3s2$%fs7m=l@%2wydz#82)=nexx*'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'LTtApp',
    'corsheaders',
    'django.contrib.staticfiles',
    'storages',
    
    #'django.contrib.gis',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware'     
]

REST_FRAMEWORK = {
    
    'DEFAULT_AUTHENTICATION_CLASSES': (
        
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_CREDENTIALS = True



ROOT_URLCONF = 'LetsTourTec.urls'

SESSION_ENGINE = "django.contrib.sessions.backends.signed_cookies"
SESSION_COOKIE_HTTPONLY = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'DIRS': [os.path.join(BASE_DIR, 'LTtApp/templates')],
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LetsTourTec.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
'''
DATABASES = {
    'default': dj_database_url.config(default='postgres://jpqpmpvl:6JJb4O7-yBOywY6m03AWHOqLf7XFqhTd@lucky.db.elephantsql.com/jpqpmpvl')
}
# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
AUTH_USER_MODEL = 'LTtApp.CustomUser'


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

LOGIN_REDIRECT_URL = '/'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
#STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATICFILES_DIRS = [BASE_DIR / 'LTtApp/static',]

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_collected')

# Para archivos multimedia
MEDIA_URL = '/media/'
WHITENOISE_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Whitenoise
WHITENOISE_MAX_AGE = 31536000  # 1 año
if not DEBUG:
    STATIC_HOST = os.environ.get('DJANGO_STATIC_HOST', '')
    STATIC_URL = STATIC_HOST + '/static/'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
''' 
GDAL_LIBRARY_PATH = 'C:/Program Files/GDAL/gdal.dll'
if sys.platform.startswith('win'):
    os.environ['PATH'] = GDAL_LIBRARY_PATH + ';' + os.environ['PATH']
'''
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'miguel6ortiz6@gmail.com'  # Tu dirección de correo electrónico
EMAIL_HOST_PASSWORD = 'miguel1928'  # Tu contraseña de correo electrónico

ALLOWED_HOSTS = ['letstourtec.com', 'www.letstourtec.com', 'letstourtec-c393a22f9c2b.herokuapp.com', 'localhost', '127.0.0.1', 'localhost:4200']

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'WARNING',
        },
        'corsheaders': {
            'handlers': ['console'],
            'level': 'DEBUG',
        }
    },
}

AWS_ACCESS_KEY_ID = 'AKIAYTBLLQA7BS6GPBHU'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'letstourtec-bucket-2'
AWS_S3_CUSTOM_DOMAIN = '%s.s3.amazonaws.com' % AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
#AWS_DEFAULT_ACL = 'public-read'
AWS_DEFAULT_ACL = None
# Configuración para archivos multimedia
DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
MEDIA_URL = 'https://%s.s3.amazonaws.com/media/' % AWS_STORAGE_BUCKET_NAME

#Console sign in URL https://736283691967.signin.aws.amazon.com/console
#Usename user-letstourtec-bucket
#Console password letsTOUR**
CSRF_TRUSTED_ORIGINS = [
    "http://localhost:4200", "https://localhost:4200"
]
CORS_ORIGIN_WHITELIST = [
    "http://localhost:4200", "https://localhost:4200"
]
CSRF_COOKIE_NAME = 'csrftoken'
SESSION_COOKIE_SAMESITE = None
CSRF_COOKIE_SAMESITE = None
SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False
CSRF_COOKIE_NAME = 'XSRF-TOKEN'
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=365), # Tiempo de vida del token de acceso
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365 * 3),       # Tiempo de vida del token de actualización
}
AWS_S3_REGION_NAME = 'eu-north-1'

#logging.basicConfig(level=logging.DEBUG)
boto3.set_stream_logger(name='botocore')


boto3.setup_default_session(aws_access_key_id='AKIAYTBLLQA7BS6GPBHU',
                            aws_secret_access_key='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')